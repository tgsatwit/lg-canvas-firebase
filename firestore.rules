rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Temporary: Allow authenticated users to access all chat collections
    // TODO: Restore proper user isolation once auth sync is fixed
    match /conversations/{conversationId} {
      allow read, write, create: if request.auth != null;
    }
    
    // Messages - allow authenticated users
    match /messages/{messageId} {
      allow read, write, create: if request.auth != null;
    }
    
    // User Reflections - allow authenticated users
    match /reflections/{reflectionId} {
      allow read, write, create: if request.auth != null;
    }
    
    // System Instructions - allow authenticated users
    match /systemInstructions/{instructionId} {
      allow read, write, create: if request.auth != null;
    }
    
    // Tasks - allow authenticated users to read all tasks and manage their own
    match /tasks/{taskId} {
      // All authenticated users can read tasks (for collaboration)
      allow read: if request.auth != null;
      
      // Users can create new tasks
      allow create: if request.auth != null 
        && request.resource.data.createdBy == request.auth.uid;
      
      // Users can update tasks they created or are assigned to
      allow update: if request.auth != null 
        && (resource.data.createdBy == request.auth.uid 
        || resource.data.assignedTo == request.auth.uid
        || request.resource.data.assignedTo == request.auth.uid);
      
      // Only the creator can delete a task
      allow delete: if request.auth != null 
        && resource.data.createdBy == request.auth.uid;
    }
    
    // Recurring task templates - allow authenticated users
    match /recurringTaskTemplates/{templateId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && request.resource.data.createdBy == request.auth.uid;
    }
    
    // Users collection - allow authenticated users to read all users (for task assignment)
    match /users/{userId} {
      // All authenticated users can read user profiles
      allow read: if request.auth != null;
      
      // Users can only update their own profile
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User preferences - allow users to manage their own preferences
    match /userPreferences/{userId} {
      // Users can only access their own preferences
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Social accounts and related collections
    match /socialAccounts/{accountId} {
      allow read, write, create: if request.auth != null;
    }
    
    match /socialComments/{commentId} {
      allow read, write, create: if request.auth != null;
    }
    
    match /socialPosts/{postId} {
      allow read, write, create: if request.auth != null;
    }
    
    match /replyTemplates/{templateId} {
      allow read, write, create: if request.auth != null;
    }
    
    match /userPreferences/{prefId} {
      allow read, write, create: if request.auth != null;
    }
    
    // Video-related collections (existing functionality)
    match /videos-vimeo/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /videos-vimeo-ott/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /videos-master/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /videos-no-match/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /videos-gcp/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /videos-youtube/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /playlists-ott/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Default rule for any other collections - require authentication
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
        
    // vimeo-ott-members collection
    // Stores synchronized member data from Vimeo OTT API
    match /vimeo-ott-members/{document=**} {
      // Allow read access for authenticated users
      allow read: if request.auth != null;

      // Only allow writes from authenticated users (for sync operations)
      // In production, you might want to restrict this to admin users only
      allow write: if request.auth != null;
    }

    // vimeo-ott-sync-status collection
    // Tracks when the last sync occurred
    match /vimeo-ott-sync-status/{document=**} {
      // Allow read access for authenticated users
      allow read: if request.auth != null;

      // Only allow writes from authenticated users
      allow write: if request.auth != null;
    }
    
    // Mailchimp members collection (individual documents per member)
    match /mailchimp-members/{memberId} {
      allow read, write: if request.auth != null;
    }

    // Mailchimp metadata collection
    match /mailchimp-metadata/{documentId} {
      allow read, write: if request.auth != null;
    }

    // Mailchimp sync status collection  
    match /mailchimp-sync-status/{documentId} {
      allow read, write: if request.auth != null;
    }
  }
}